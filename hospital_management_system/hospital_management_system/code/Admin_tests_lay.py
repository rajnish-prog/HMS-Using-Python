# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'admin_tests_lay.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from clickableFrame import ClickableFrame
from EntryChecking import *
from database import ConnectionPool,showTestsData,addTestsData,updtTestsData,deleteTestsData

class TestDataRetrievalThread(QtCore.QThread):
    dataRetrieved = QtCore.pyqtSignal(object)
    retrievalComplete = QtCore.pyqtSignal()
    def __init__(self, parent=None):
        super(TestDataRetrievalThread, self).__init__(parent)

    def run(self):
        try:
                pool = ConnectionPool(5, 'hms_database.db')
                data = showTestsData(pool)
                self.dataRetrieved.emit(data)
        except Exception as e:
            print(e)

class AddUpdateDelTestDataThread(QtCore.QThread):
    operationComplete = QtCore.pyqtSignal()
    def __init__(self,data,flag,parent=None):
        super(AddUpdateDelTestDataThread, self).__init__(parent)
        self.flag=flag
        self.data=data
    def run(self):
        try:
                pool = ConnectionPool(5, 'hms_database.db')
                if(self.flag==1):
                     addTestsData(pool,self.data)
                elif(self.flag==2):
                     updtTestsData(pool,self.data)
                elif(self.flag==3):
                     deleteTestsData(pool,self.data)
                self.operationComplete.emit()

        except Exception as e:
            print(e)

class Admin_tests(object):

    def __init__(self):
        self.tableTestsDet = QtWidgets.QTableWidget()
        self.testIdEntry = QtWidgets.QTextEdit()
        self.testNameEntry = QtWidgets.QTextEdit()
        self.testStatusEntry = QtWidgets.QTextEdit()
        self.testAvailDaysEntry = QtWidgets.QTextEdit()
        self.testTimeSlotEntry = QtWidgets.QTextEdit()
        self.testCostEntry = QtWidgets.QTextEdit()
        self.test_data_thread = TestDataRetrievalThread()
        self.test_data_thread.dataRetrieved.connect(self.updateTestsTable)
        self.test_data_thread.start()

    def backHome(self):
        from Admin_homepage_lay import Admin_home_lay
        self.window = QtWidgets.QMainWindow()
        self.ui = Admin_home_lay()
        self.ui.setupUi(self.window)
        self.window.show()
        self.admin_activity.close()

    def showWarningMessage(self,message):
        msgBox = QtWidgets.QMessageBox()
        msgBox.setIcon(QtWidgets.QMessageBox.Warning)
        msgBox.setWindowTitle("Warning")
        msgBox.setText(message)
        msgBox.setStandardButtons(QtWidgets.QMessageBox.Ok)
        msgBox.exec_()

    def updateTestsTable(self,data):
        self.test_data_thread.retrievalComplete.connect(self.test_data_thread.terminate)
        for row_number, row_data in enumerate(data):
            self.tableTestsDet.insertRow(row_number)
            for column_number, column_data in enumerate(row_data):
                item = QtWidgets.QTableWidgetItem(str(column_data))
                self.tableTestsDet.setItem(row_number, column_number, item)    
    
    def verifyData(self,data):
        if not checkEmptyFields(data):
                self.showWarningMessage("All Fields are mandatory!!")
        else:
                if  checkNumericalData(data[0]) and not checkNumericalData(data[6]):
                     self.showWarningMessage("Numerical field value wrong!!")
                else:
                     if checkLicenseNumber(data[0],self.tableTestsDet):
                        return True
                     else:
                          self.showWarningMessage("Id in use or wrong entry!!")
        return False 

    def addData(self):
        data = (self.testIdEntry.toPlainText().strip(),self.testNameEntry.toPlainText().strip(),
                 self.testTypeEntry.toPlainText().strip(),self.testStatusEntry.toPlainText().strip(),
                 self.testAvailDaysEntry.toPlainText().strip(),self.testTimeSlotEntry.toPlainText().strip(),
                 self.testCostEntry.toPlainText().strip())
        if self.verifyData(data):
             self.test_add_updt_thread = AddUpdateDelTestDataThread(data,flag=1)
             self.test_add_updt_thread.start()
             self.test_add_updt_thread.operationComplete.connect(self.refreshTable)
        
    def verifyUpdtData(self,data):
        if not checkEmptyFields(data):
                self.showWarningMessage("All Fields are mandatory!!")
        else:
                if  checkNumericalData(data[0]) and not checkNumericalData(data[6]):
                     self.showWarningMessage("Numerical field value wrong!!")
                else:
                     row = getSelectedRowData(self.tableTestsDet)
                     if row is not None and str(row[0]) == str(data[0]):
                        return True  
                     elif row is not None and not checkLicenseNumber(data[0],self.tableTestsDet):
                        self.showWarningMessage("Id in use or wrong entry!!")
                     else:
                        self.showWarningMessage("Record not selected")
        return False  

    def updtData(self):
        data = (self.testIdEntry.toPlainText().strip(),self.testNameEntry.toPlainText().strip(),
                 self.testTypeEntry.toPlainText().strip(),self.testStatusEntry.toPlainText().strip(),
                 self.testAvailDaysEntry.toPlainText().strip(),self.testTimeSlotEntry.toPlainText().strip(),
                 self.testCostEntry.toPlainText().strip(),self.testIdEntry.toPlainText().strip())
        if self.verifyUpdtData(data):
             self.test_add_updt_thread = AddUpdateDelTestDataThread(data,flag=2)
             self.test_add_updt_thread.start()
             self.test_add_updt_thread.operationComplete.connect(self.refreshTable)
    
    def delData(self):
        row = getSelectedRowData(self.tableTestsDet)
        if row is not None:
                selected_lic_no = row[0]
                self.test_add_updt_thread = AddUpdateDelTestDataThread(selected_lic_no,flag=3)
                self.test_add_updt_thread.start()
                self.test_add_updt_thread.operationComplete.connect(self.refreshTable)
        else:
             self.showWarningMessage("Please select record!!") 
    
    def refreshTable(self):
        self.tableTestsDet.clearContents()
        self.tableTestsDet.setRowCount(0)
        self.test_data_thread = TestDataRetrievalThread()
        self.test_data_thread.dataRetrieved.connect(self.updateTestsTable)
        self.test_data_thread.start()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 701)
        MainWindow.showMaximized()
        self.admin_activity = MainWindow
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.header_frame = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.header_frame.sizePolicy().hasHeightForWidth())
        self.header_frame.setSizePolicy(sizePolicy)
        self.header_frame.setMinimumSize(QtCore.QSize(1280, 100))
        self.header_frame.setMaximumSize(QtCore.QSize(16777215, 100))
        self.header_frame.setStyleSheet("background-color:rgb(0, 85, 127);")
        self.header_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.header_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.header_frame.setObjectName("header_frame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.header_frame)
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.logo_frame = ClickableFrame(self.header_frame)
        self.logo_frame.setMinimumSize(QtCore.QSize(80, 50))
        self.logo_frame.setMaximumSize(QtCore.QSize(100, 16777215))
        self.logo_frame.setStyleSheet("background-color:transparent;\n"
"margin-top:6px;\n"
"margin-bottom:0px;")
        self.logo_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.logo_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.logo_frame.setObjectName("logo_frame")
        self.logo_frame.clicked.connect(self.backHome)
        self.backBtn = QtWidgets.QLabel(self.logo_frame)
        self.backBtn.setGeometry(QtCore.QRect(20, 10, 61, 71))
        self.backBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.backBtn.setStyleSheet("")
        self.backBtn.setText("")
        self.backBtn.setPixmap(QtGui.QPixmap(":/reosurces_logo/back-svgrepo-com.svg"))
        self.backBtn.setScaledContents(True)
        self.backBtn.setAlignment(QtCore.Qt.AlignCenter)
        self.backBtn.setObjectName("backBtn")
        self.horizontalLayout.addWidget(self.logo_frame)
        self.title_frame = QtWidgets.QFrame(self.header_frame)
        self.title_frame.setMinimumSize(QtCore.QSize(1280, 0))
        font = QtGui.QFont()
        font.setPointSize(42)
        self.title_frame.setFont(font)
        self.title_frame.setStyleSheet("background-color:transparent;")
        self.title_frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.title_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.title_frame.setObjectName("title_frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.title_frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.title_label = QtWidgets.QLabel(self.title_frame)
        self.title_label.setMinimumSize(QtCore.QSize(800, 0))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.title_label.setFont(font)
        self.title_label.setStyleSheet("color:#fff;")
        self.title_label.setAlignment(QtCore.Qt.AlignCenter)
        self.title_label.setObjectName("title_label")
        self.verticalLayout.addWidget(self.title_label, 0, QtCore.Qt.AlignHCenter)
        self.horizontalLayout.addWidget(self.title_frame)
        self.verticalLayout_2.addWidget(self.header_frame)
        self.frame_15 = QtWidgets.QFrame(self.centralwidget)
        self.frame_15.setMaximumSize(QtCore.QSize(16777215, 80))
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.verticalLayout_22 = QtWidgets.QVBoxLayout(self.frame_15)
        self.verticalLayout_22.setObjectName("verticalLayout_22")
        self.activityNameDisp = QtWidgets.QLabel(self.frame_15)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.activityNameDisp.setFont(font)
        self.activityNameDisp.setStyleSheet("color:rgb(0, 85, 127);")
        self.activityNameDisp.setObjectName("activityNameDisp")
        self.verticalLayout_22.addWidget(self.activityNameDisp, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_2.addWidget(self.frame_15)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setContentsMargins(15, 9, 15, -1)
        self.gridLayout_2.setHorizontalSpacing(15)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.frame_3 = QtWidgets.QFrame(self.frame)
        self.frame_3.setStyleSheet("BACKGROUND-COLOR:#c8cbcf;\n"
"BORDER-RADIUS:5PX;")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_4 = QtWidgets.QFrame(self.frame_3)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.frame_4.setFont(font)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label = QtWidgets.QLabel(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout_3.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_3.addWidget(self.frame_4)
        self.frame_5 = QtWidgets.QFrame(self.frame_3)
        self.frame_5.setStyleSheet("padding-right:2px;\n"
"padding-left:2px;")
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout.setHorizontalSpacing(25)
        self.gridLayout.setObjectName("gridLayout")
        self.label_2 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 0, 1, 1)
        self.testIdEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testIdEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testIdEntry.setFont(font)
        self.testIdEntry.setStyleSheet("background-color:white;")
        self.testIdEntry.setObjectName("testIdEntry")
        self.gridLayout.addWidget(self.testIdEntry, 0, 1, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 0, 2, 1, 1)
        self.testTimeSlotEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testTimeSlotEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testTimeSlotEntry.setFont(font)
        self.testTimeSlotEntry.setStyleSheet("background-color:white;")
        self.testTimeSlotEntry.setObjectName("testTimeSlotEntry")
        self.gridLayout.addWidget(self.testTimeSlotEntry, 3, 3, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 2, 2, 1, 1)
        self.testTypeEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testTypeEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testTypeEntry.setFont(font)
        self.testTypeEntry.setStyleSheet("background-color:white;")
        self.testTypeEntry.setObjectName("testTypeEntry")
        self.gridLayout.addWidget(self.testTypeEntry, 2, 1, 1, 1)
        self.testAvailDaysEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testAvailDaysEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testAvailDaysEntry.setFont(font)
        self.testAvailDaysEntry.setStyleSheet("background-color:white;")
        self.testAvailDaysEntry.setObjectName("testAvailDaysEntry")
        self.gridLayout.addWidget(self.testAvailDaysEntry, 3, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 3, 0, 1, 1)
        self.testNameEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testNameEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testNameEntry.setFont(font)
        self.testNameEntry.setStyleSheet("background-color:white;")
        self.testNameEntry.setObjectName("testNameEntry")
        self.gridLayout.addWidget(self.testNameEntry, 0, 3, 1, 1)
        self.testCostEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testCostEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testCostEntry.setFont(font)
        self.testCostEntry.setStyleSheet("background-color:white;")
        self.testCostEntry.setObjectName("testCostEntry")
        self.gridLayout.addWidget(self.testCostEntry, 4, 1, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 2, 0, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 4, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.frame_5)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 3, 2, 1, 1)
        self.testStatusEntry = QtWidgets.QTextEdit(self.frame_5)
        self.testStatusEntry.setMaximumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.testStatusEntry.setFont(font)
        self.testStatusEntry.setStyleSheet("background-color:white;")
        self.testStatusEntry.setObjectName("testStatusEntry")
        self.gridLayout.addWidget(self.testStatusEntry, 2, 3, 1, 1)
        self.verticalLayout_3.addWidget(self.frame_5)
        self.gridLayout_2.addWidget(self.frame_3, 0, 1, 1, 2)
        self.delTestBtn = QtWidgets.QPushButton(self.frame)
        self.delTestBtn.setMinimumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.delTestBtn.setFont(font)
        self.delTestBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.delTestBtn.setStyleSheet("background-color:rgb(0, 85, 127);\n"
"COLOR:WHITE;\n"
"BORDER-RADIUS:5PX")
        self.delTestBtn.setObjectName("delTestBtn")
        self.gridLayout_2.addWidget(self.delTestBtn, 2, 1, 1, 2)
        self.addTestBtn = QtWidgets.QPushButton(self.frame)
        self.addTestBtn.setMinimumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.addTestBtn.setFont(font)
        self.addTestBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.addTestBtn.setStyleSheet("background-color:rgb(0, 85, 127);\n"
"COLOR:WHITE;\n"
"BORDER-RADIUS:5PX")
        self.addTestBtn.setObjectName("addTestBtn")
        self.gridLayout_2.addWidget(self.addTestBtn, 1, 1, 1, 1)
        self.tableTestsDet = QtWidgets.QTableWidget(self.frame)
        self.tableTestsDet.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tableTestsDet.setFont(font)
        self.tableTestsDet.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.tableTestsDet.setStyleSheet("QHeaderView::section {\n"
"                background-color: #00557d;\n"
"                color: white;\n"
"                font-weight: bold;\n"
"padding:5px;\n"
"            }")
        self.tableTestsDet.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableTestsDet.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.tableTestsDet.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.tableTestsDet.setShowGrid(True)
        self.tableTestsDet.setWordWrap(False)
        self.tableTestsDet.setObjectName("tableTestsDet")
        self.tableTestsDet.setColumnCount(7)
        self.tableTestsDet.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        item.setBackground(QtGui.QColor(0, 85, 125))
        self.tableTestsDet.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTestsDet.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTestsDet.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTestsDet.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTestsDet.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTestsDet.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableTestsDet.setHorizontalHeaderItem(6, item)
        self.tableTestsDet.horizontalHeader().setCascadingSectionResizes(True)
        self.tableTestsDet.horizontalHeader().setDefaultSectionSize(180)
        self.tableTestsDet.verticalHeader().setDefaultSectionSize(45)
        self.gridLayout_2.addWidget(self.tableTestsDet, 0, 0, 3, 1)
        self.updtTestBtn = QtWidgets.QPushButton(self.frame)
        self.updtTestBtn.setMinimumSize(QtCore.QSize(200, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.updtTestBtn.setFont(font)
        self.updtTestBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.updtTestBtn.setStyleSheet("background-color:rgb(0, 85, 127);\n"
"COLOR:WHITE;\n"
"BORDER-RADIUS:5PX")
        self.updtTestBtn.setObjectName("updtTestBtn")
        self.gridLayout_2.addWidget(self.updtTestBtn, 1, 2, 1, 1)
        self.verticalLayout_2.addWidget(self.frame)

        self.addTestBtn.clicked.connect(self.addData)
        self.updtTestBtn.clicked.connect(self.updtData)
        self.delTestBtn.clicked.connect(self.delData)

        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.title_label.setText(_translate("MainWindow", "HOSPITAL MANAGEMENT SYSTEM"))
        self.activityNameDisp.setText(_translate("MainWindow", "TESTS"))
        self.label.setText(_translate("MainWindow", "TEST FORM"))
        self.label_2.setText(_translate("MainWindow", "TEST ID:"))
        self.label_3.setText(_translate("MainWindow", "NAME :"))
        self.label_5.setText(_translate("MainWindow", "STATUS:"))
        self.label_7.setText(_translate("MainWindow", "AVAIL DAYS:"))
        self.label_4.setText(_translate("MainWindow", "TYPE:"))
        self.label_9.setText(_translate("MainWindow", "COST:"))
        self.label_8.setText(_translate("MainWindow", "TIME SLOT:"))
        self.delTestBtn.setText(_translate("MainWindow", "DELETE"))
        self.addTestBtn.setText(_translate("MainWindow", "ADD"))
        self.tableTestsDet.setSortingEnabled(True)
        item = self.tableTestsDet.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "TEST ID"))
        item = self.tableTestsDet.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "NAME"))
        item = self.tableTestsDet.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "TYPE"))
        item = self.tableTestsDet.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "STATUS"))
        item = self.tableTestsDet.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "AVAIL DAYS"))
        item = self.tableTestsDet.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "TIME SLOT"))
        item = self.tableTestsDet.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "COST"))
        self.updtTestBtn.setText(_translate("MainWindow", "UPDATE"))
import resources_rc
